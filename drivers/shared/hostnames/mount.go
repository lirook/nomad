package hostnames

import (
	"fmt"
	"io/ioutil"
	"path/filepath"

	"github.com/hashicorp/nomad/plugins/drivers"
)

func GenerateEtcHostsMount(taskDir string, conf *drivers.NetworkIsolationSpec) (*drivers.MountConfig, error) {
	if conf == nil || conf.Mode != drivers.NetIsolationModeGroup {
		return nil, nil
	}
	hostsCfg := conf.HostsConfig
	if hostsCfg == nil || hostsCfg.Address == "" || hostsCfg.Hostname == "" {
		return nil, nil
	}

	content := fmt.Sprintf(`# this file was generated by Nomad
127.0.0.1 localhost
::1 ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
ff02::3 ip6-allhosts

# this entry is the IP address and hostname of the allocation
# shared among all tasks in the task group's network
%s %s
`, hostsCfg.Address, hostsCfg.Hostname)

	path := filepath.Join(taskDir, "hosts")
	err := ioutil.WriteFile(path, []byte(content), 0755)
	if err != nil {
		return nil, err
	}

	mount := &drivers.MountConfig{
		TaskPath:        "/etc/hosts",
		HostPath:        path,
		Readonly:        true,
		PropagationMode: "private",
	}

	return mount, nil
}
